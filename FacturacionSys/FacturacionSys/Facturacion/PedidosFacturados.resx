<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>