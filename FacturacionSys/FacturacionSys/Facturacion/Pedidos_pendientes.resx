<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAPJSURBVHhe7dzLi40BHMbxcSeSnZDVRGSnJKVQYi/JxoL8
        EWQhyWRhxYaVmoU7sVKyIJchVhYWdrKSSyzcZ4bnV5TGz8yR8873956eb31W5pzeOe8zZ855T6PPOeec
        c865Xm+ubJX9ckrO/nRS9kn8W3yN67HixF6Vz/J9AvE1V2SzuJa3RoYkO9GduCerxbWsqXJQhiU7sf/i
        mxyQKeJa0Cy5LNnJ/B/nZKa4wk2Ta5KdwG64KPHs4op2TLIT100D4gq2RbIT1m2jslFcoWbIM8lOWBOe
        Svy6cUXaK9mJatIucUV6ItlJatJjceO0Uo5IXEx5IyOSPZCTLX6Hn5a1MvundTIo8W/ZbSZbPFav5a4c
        luXSmpbKJanyYP7uq2yTv7VD4sJPdltSPJbxmcViKV1cP38r2TdRQXwINFFxBTG7bQWvZIOULE7+F8kO
        vIL3Mkcmap58kOw+Kvgk5UYQT/uVf/LDDem0W5LdRxXxTLBIytTEtfdui8u4nRYfHWf3UckZKdEqqfiC
        b6xH0mnE28p/Fe8UlgneUckOsJp4wPplolZIdvuKDgneQ8kOrqLrMt6neXF596Zkt63ojuDFq+vs4Ko6
        L/NlbAukDa9lfhcvBtHipyk7sOrigTsuu2WPnJC4Wpl9bWXxaw1tumQHZpMHzQPgoXkAPDQPgIfmAfDQ
        PAAemgfAQ/MAeGgeAA/NA+CheQA8NA+Ah+YB8NA8AB6aB8BDa9MAnkv8Jw+deCHZfVSE1qYBxInttPjL
        puw+KkLzAHhoHgAPzQPgoXkAPDQPgIfmAfDQPAAemgfAQ/MAeGgeAA/NA+CheQA8NA+Ah+YB8NA8AB6a
        B8BD8wB4aB4AD80D4KF5ADw0D4CH5gHw0DwAHpoHwEPzAHhoHgAPzQPgoXkAPDQPgIfmAfDQ2jSA+7Kz
        Qw8ku4+K0No0gF6F5gHw0DwAHpoHwEPzAHhoHgAPzQPgoXkAPDQPgIfmAfDQ2jSAu7K9Q0OS3UdFaG0a
        gD8MaiAPgIfmAfDQPAAemgfAQ/MAeGgeAA/NA+CheQA8NA+Ah9amAfQqNA+Ah+YB8NA8AB6aB8BDmyLZ
        QdnkGBa8d5IdnDXvleC16Q8pe81twRuQ7OCseQcFb6WMSnaA1pwR6ZcSXZDsIK05g1KmJfJasgO17nsp
        C6VUm+SzZAds3fNR1kvJNoqfCZoTP/llT/6vFstZ8QvD7okXfPE7v9zT/ngtk0NyR+KCRXwT2Tdnf4or
        fPGYxfv8eKtX5tW+c84555xzzjnnnHPOOeecc84556rX1/cDeElH6nsMYxwAAAAASUVORK5CYII=
</value>
  </data>
</root>