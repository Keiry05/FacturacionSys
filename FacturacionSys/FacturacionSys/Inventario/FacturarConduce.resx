<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAACb5JREFUeF7tnVnIdd8cx18zF0jmEJIbEYn//0/J7AIXCmUqY6a/klJKGTOVKRku
        xAUuiJSpZEghF4qMhUTmzLPMw/f7sB/f97yf56x9nr33WWevsz71qbd37zX81rPOOXuvvdbaF8S/u0V/
        I+8mm4QC7l5qs52Agu2y7gR3l01BgXbPtrlOQEF2t9tUJ6AAu2V/K5voBBRcd5xNdAIKLP1H41LMu7j6
        TkBBpa1DMe+qO8FlcpVQQGnrUMyD/5L+49KxTVfbCSiYtHUo5kH/RFwum+4EFEjaOhTzoDuA2bUT+PzV
        QEGkrUMxDw4dwDTbCSiAtHUo5sHsAGaXTvA7uYpOQJVPW4diHtzsAKa5TkAVT1uHYh6kDmCa6gRU6bR1
        KObBszqA2bUTXCEPEqpw2joU8+C2DmCa6ARU2bR1KObBUgcwq+8EVNG0dSjmwTEdwOzaCe4hDwaqZNo6
        FPPg2A5gVtsJqIJp61DMg7t0ALPKTkCVS1uHYh7ctQOYXTrB72V1qGJp61DMg+fpAGaXTlAdqlTaOhTz
        Pq0OVSptHYp5n1aHKpW2DsW8T6tDlUpbh2Lep9WhSqWtQzHv0+pQpdLWoZj3aXWoUmnrUMz7tDpUqbR1
        fK+/pNSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSm
        aXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmln
        GtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmlnGtSmaXWoUmkJSnNMlqA0aXWoUmkJSnNMlqA0aXWoUmkJ
        SnNMlqA0aXWoUmkJSnNMlqA0aXWoUmkJSnNMlqA0aXWoUmkJSnNMlqA0aXWoUmkJSnNMlqA0aXWoUmkJ
        SnNMlqA0aXWoUmlnPNeQfnnE0+Qb5EcktWn6Afkq+QR5V3lVuVeoUmlnO7eRz5Efk3+S1Ia76BdSuVM8
        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
        SUVORK5CYII=
</value>
  </data>
</root>