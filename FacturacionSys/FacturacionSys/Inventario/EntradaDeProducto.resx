<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAEudJREFUeF7t
        nXtsVNedx2nUrFpVSlXtbqtNtFGrZv/Z/LFS/2n/2URK1EqpqmSTpgllWZRNSQQlKSTB4Q3mZUMggRAI
        j2AbbAN+4AeYNwQcbLexPX4/xvaMn+MXNgZjw9hg4NfzPWfOnfsyePAtNr7nJ310xnfmnDn39/2ecx9z
        7/U0FSpUqFChQoUKFSpUqFChQoUKFSpUqFChQoXr4gnGU4ynFVOOf2f8M+MxhiUef+mll573+/0n+/v7
        fdeuXWtUTD26uroKt27d+g7T+4dC9lA8++yz/zU8PHxlaGiIBgcHaWBAMRW5cSNIIyO3b4ZMoM0Ej+Xm
        5m4LBoN3r169SoqpzcDAALGZwMd0/1ch/7RpP2hra7uAkX/lyhWFC2B6DzLdsV/A4wcdHR15cEZfX9+o
        9PT0UG9vr+17ijDI0aVLl2zfuxeXL1/m9VDavT8a0AXYvTcaVVVVA0z3sAECgUABDIAv14OG6+rqqKmp
        idrb24l9jnw+HzU2Nlo+63ZaWlqovr6eWltbea7wN3LX3d1t+3kJG43U0NBgqdfZ2Wn7eUllUhKVzZ1L
        1e+8Q1WM0r/8hWpOnrT9rJm8vDyjAZqbm7/t77/GBO/V6OrqZh2p51MG24PkO4eAHSVwY1RX1xg+72aQ
        JwiG3GAgiR3pAb7NZUdWTNgO23o+n58bwFwPfzNNGC2WOpcu9VDhn/9MzStWUMfOndSdnMzp2L2b/AsX
        UvH6GEsdM8eOHTMagI3ooqtX+3njEjZNcLdA/OvXr7M9yBscdBLLxGzgN9RxIy0trXzUQjTkRuYKJcTE
        AMJgMdcLBNq5OeSOmbkelnu9Xj4Q9fUK166jhnnzqH3HDi58b1YWp5vNCO1ffEHVf/gDVaYfNtQxk5WV
        ZWeAq2y6usRB5zAtYRnElu7UOxSzQFVVtVbHrYgcdBtGscwTcoccwiB+f6OhHkzB9r3uWQ+DDLOLrNPR
        0Unf/PznfPQHtmzho74rIYG64uP5bBDYvJl8CxZQ7nPPGb7LTGZmptEAbJvjQQdra70cj6dE285LE0jQ
        YbiaHUpQTU0N3141NPj4bAAaG5s4TU3NHKw8pjIxUlrZlBfQwNQowcp1dnZx4HqnkO2hxHdI9N8tgfEl
        so+trW0a6L9cF5SYpisrK1l7HTwnyI05V8gh9qFKSkq0PKEsLS3jAo9WDztr2C/weDyaLkU5xyj38cep
        bvZsal61ilpjY6lt0yZq/eQTao2Joably6n697+n89//PutXlVZPDwxlMQAb7WXoZH19A6ekpJRPT1gx
        aQJ0CiU6jNEPYb3eOvZ5H/tsE3e4EL+ZA/FlkpqaWjgtLUhiOKGtrQGWBCReigBxIJRzoE0gvkMIL7+z
        rU2K3c77AvR9lK+F4AKshyyxjthUYh2RE+RGnyvkDjnEYCotLQ3lR1BWVs7qN7ER2c3F1tfD3xhgqAct
        GhqEaQrT0unCtGn07TPPkHfWLGp47z3yzZ/PqWc7hDVvvkn5P/4xXXjsMT7DSD31oB2LAbAJuHy5T0uW
        ENXPVwx7plg5HN4AdAw7Lug8vkTWcSsYacgFRityI/OEnCF3yCFyWVPjtdSDwHb1sEOJAYb38TlZx19Z
        TRe++1268J3vUP5PfkIlv/oVlb/wApU9/zx5fvELyvvRj7hBzj/1FDe1/vv0ZGRkWA3Q29tnGBmY3uWK
        YUXQKbgZ4svOVVRUanXcSlVVDc8FcoLcIEfIFaZ35A45xGYSs4a+HmZPHFLDILIejIBcox6WYz/M52s0
        1Lvw389xkTnMCNgk5IZMIZfnvf0nQx0zhw8ftjMAjknFdAiqq2t5B2QH0TGsFFZUjP5qvlL6Om5FzgLI
        DXIEkDM5+vG+fb1KzTyogxybB5ilzumzdP6JJ8ImMHH+pz/jM4W5np709HSjAdj2uwjHh3I7KMEeLpyK
        lcPKAHQMKwRnmj/vVrDPA7GQG5knOfIhsl0dgP2LiooKPhPIHKPECSW0Z1cHlGcfpfPP/IfVAL/8JdUU
        /M22jp60tDSzAfxF3d09rAPhnR0JdvAgeHl5BQfbMrvPKVr5XnZ5eSXbwavgAmKQ2H3OTF1dA8+trIed
        PrvP6fGztj379lP+RwupYMlSKsvIsv2cHaMY4BJzn9hbV0xtUlNTrQbAsbI8hFNMbVJSUqwGwIkSTFmK
        qc/BgwetBsDZMXHCQTHVOXDggNUAOD7Ezohi6pOcbGuAdnbIV69wAcnJyVYD4PgQh3iKqU9SUpKdAdr4
        2T8ztbV1hLOEIyMjNNGBPqAv6JNdX8Fk6u/DjrHkByQmJloNgF+8cF5bDz6MS4knWwSDQe5kc3+xDO+5
        PUbLj2T//v1WA+Cn24qKKgM4NzBZAyeuzP3FMhUi7PIjsRiAHRoU4bdtnMbUgxtFJmsMDw9b+otlKkTY
        5Ueyb98+swEainDOv7S03MDdu3dDzdnHt74++uO2Yvr1unxHQZto+16BvkXaXzeFXX4kCQkJdgbA1Sdl
        Bu4Xf/y8iN5L8NJhT5AyS4YdAW2hTbR9v4i0v24Lc34k8fHxVgPgWjWPp9TA/QKjdd2RdsoqH3EUtIm2
        7xeR9tdtYc6PxNYAOEVYXFxi4H4BkaIz26mxe5gu9d+knv5bnN5rI3R58Db1Dd5h5R3q7hd09d+mzqsj
        1HGF0XeLApeHOW29Q9TaE+Tkeod5m2MxQKT9dVuY8yOJi4tzzgDLM9qZyCN0+/Ztvt2R3Llzhy/Dsemt
        W7f4TgnAjiUOU+Q9BvJSaFwQCS7WBXmbygDjD3N+JI4aYGlagI90KTa4efOmRWzc8KC/7l1/BSyQF0V+
        XTXI21QGGH+Y8yPZu3evcwb4+FCAuq8KwSE2gNiZmZm0ePFiWrRokYWPP/6YExUVpbFw4UJO6tc+3qYy
        wPjDnB/JV1995ZwBPjwYoECPGN1yZF+8eJGi18RQ9jdeOvJNHScrtzZEDWVdqKGcgkbO0Tw/J/uij7IY
        cecv8zaVAcYf5vxIHDXA/OQAXSgopTNnznCOHDlCK6PX0qniTsopGaSkgut04K/XKblgUCMpf4BzoGCA
        kvOvcZLy+inx4jXa8XWQt+mEAXBjhuzTowzWAesSaZjzI9mzZ49zBngvMUC7Dp2hL+LSONv2plJWXhNl
        FvXTZ2eCFHtiOGLQphMGyMnJwcUPUwKsS6Rhzo9k9+7dzhlgTkKAEvOuUVZhX4jLdCi/jzYcD9Lqo0MP
        BNp0wgAZGRm2yXwUwbpEGub8SHbt2uWcAd6JC1Ds8ev0yQnBxuODTMQgLcsaemDQphMGwDX2KSkptgl9
        lMA6YF0iDXN+JDt37nTOAP//VRtFpQUdBW06YQAEzkfgsPRRBuvwIGHOj+TLL790zgCzdrfS/ENsx81B
        0KZTBnBzmPMjcdQAM3a20tykoKOgTWWA8Yc5P5IdO3Y4Z4A3d7TS7IQbjoI2lQHGH+b8SBw1wOtftNKs
        uBuOgjaVAcYf5vxItm/f7pwB/mdrC03fdd1R0KYywPjDnB9QVOShbdu2OWeA321podd2DDoK2lQGGH/o
        cwPhZemYAf5vezH9JraUfvtpB6PTITp4m2j7fhFpf90W+tzoDfD55587Y4CC6gDN2HiaXlqZ4yhos7yl
        P/Qto0ek/XVb6HOjN8DWrVudMQB+75cXcjjNWCLS/rotILZe+KIiUW7ZssUZA+AiEFzt849gLBFpf90W
        0gCSwkJRMgMYnxb+oAaY6HjU+vuwwyx8UVExFbLys88+UwZwQygDuDyE8Ex0rVQGcFVAbLMBUH766afK
        AG4I+xmgmDZv3qwM4IYYbQZQBnBJQHg+6nUzAWaATZs2KQO4ISC2NIC+3LhRGcAVETaAkY0bN7rDAG6/
        L8BigNBmYMOGDdeZ7lPfAG6/L0AzQEh41xnA7fcFiJEfFl6WsbGx7jCA2+8L0AwQ2gTw08LMBDExMe4w
        AMLN9wXI6V8KL34XcJkB3Bz6aR/nAcQPQh5av369MoAbQggPE4gybAA1A7gi9Nt9UYorghybASbyOYGI
        SPvrtpDC66f/omIPrVu3zhkDTPRzAiPtr9tCCo6yWCtLaM2aNTeY7uM3AEbrRD4nMNL+ui3EqGfTPhNf
        5EiUq1evds4Aoz0nsHdghD89DKjnBE5MiNGP3GAmCOfJUQOM9TmBOJ5Vzwl8uIGchEc/w4OylKKjo50z
        gOPPCaxWzwl0KrTccOFLxKNiS0po1apVzhlgtOcEZmdn0/Lly2nZsmWcpUuXGliyZIkGniconymYdl49
        J9Cp0AuP1/JZwY7OAHbPCczLy6O1MZ/w5wMevVjPyWavQVaul3OsoIlzNL+Rc+QinhXop7gLfeo5gQ4F
        pnu98J4SUTo6A+CZfrl/LaNz587R2bNn+c+Wq9fG0KniLu05gfpnBD7M5wS6PTDdQ/CSkPDycfGOGgDP
        9NuT8jXtiD/MSKftjKz85knxnEC3BxeegZKLXyrKlStXOmeAyfycQLeHHPXCBGVUWgoTlGPfLMh0d8YA
        k/k5gW4PCM9F5+Lj38WIku2UO2eAyf6cQDeHWXhQVlaBozDnDKCeEzh5wyw8p9xhA/DnBCYHHUU9J9CZ
        EMKHxGfCoyx32gDqOYGTNyB4aakQH8LjfwZWVFTg5JtzBpjMzwns6emhU6dOUXp6+iMN1gHrEmmER30l
        ey3+aST+c+jixYudM8Bkfk4gbqqwu8r2UQTrEmlI4SsqhPAoKysdNsBkfk6g2+8LwHRfXi6EhwEgfmVV
        NX5zGWK6j98AM7d9Sy9E59FvYuoZDQ5Rz9ucua0w9C2jx/3629zcPGXuC8C6RBoVlWHhKyqrqaoKr2uY
        ARY7Y4BiXw/97+Zz9NvoE46CNj3+3tC3jB5j6a+b7wvgwldI4VlZjdcwgEMzAK4BwE+//wjQ9v0i0v66
        LTDdc+GZ6KC6GtTiX/Y5YwCE/iogJxlLoI/iujeBCmMI4atDwtdQTU0tJyoqamwGeNCp52EETGI2wFiN
        44ZALuSor2KjvqYGBvBSTa0X/6BzbAYIBodCzU2+GBoaNoiPu2CwTIUI7DsI4Wv5tA/hYYDaSAwQCHSE
        mpt80d7ewYQPzwAwAJapEIETR3zKZ4JDdI63jryMjz76aGwGwO/JuNRrssXg4HXet/AMIG6A9HhKJmV/
        H3bgusza2rqw8LX1XHivl5V19fThh2M0AMBPip2dnTQ8fDPU/MQFprWOjk7WLyk+bn8OGwAl3sNnJkN/
        H3bg8vuenl4ushRfCl/HltXVNVB9fcPYZ4CJAuKaSyPhe97MBpD3xBtKC9hk6Eu0x0oG2hVthpE3Vdrd
        ZcMZ5epbeREmBpG8HEv8RKv/mdb8a5396Vscz2uHdaHjeXlYZ7edl9O9FB/Co2xo8LEZ4MNhpnvYAD6f
        r3CiDYAEy9L4OrwsLLIQiYvH3xPLRjWCRNbV/c3blSVbpv8b7YhSCC/ussFrY9/vJby8HEuYIHxxht3P
        tEJ4+9O3OJljPKwTwlu286bpHqOeG4AJD/HBBx98YDRAU1PT3ybKAEiwubQHgoVKLlRIRE1QXcnfkyXD
        8LexlG2bv0sIzgiVvG+WUR8SfpSrbyG2KK1X5dj9TMvLUU7fQng56oXw4rDuXsJj1OuFb/D5ye9vpAUL
        FhgM8E9er/eYj72prdxDREuulnwBBBKvIWCo5Mv0Jd4zlRDWXIbqyDLcBpaJUkMTXLzmfbMIbxz1o119
        a53uw8Lrp3thAIz6kPA2p2/1x/Pm6V4IX8dHuhQepRCelUxb6AvwOWYAXBX8b0J+Fnv27JnT3Nx8U1vJ
        h4hItjRA2AhSIIMBZMmEtRjAjLZcGkGMciwX7RtHvXk7L6b7ewvP0Y16Od3zkR8SXQhvnu7tt/Nyurc7
        fauf7kfbzsvpXhvxDIju9wvxGxubKC0tnebPn5/HZP+eUF/EE+fOnTtVXFx8My8v/9bZs+dunTlzlnP6
        9BmNU6dOa5w8eUrjxImTGsePnzBw7NjxWzk5xzSOHMnRyM4+AkYkWVnZDPE6MzNLI0P/OiMzRMbI4cOC
        9PTDGmwFR1JT026DlJTU2ympqfy1/PvQIbaMlymclBSUhzgHwcGDIQ7dPnDgICcpKfkOJzlUhkhMTBIk
        oUwM/83Yvx9/i2V4HWZ/iMS7+/btt5CQsI8jX+/bJ4iPT2B/S/AZ8TqevZbvsZLi4uI58fEo47S/9+6N
        o9jYDXfZEUDf008//Z8h3Q3xvTlz5rywdu3aJTExMev1rFu3zsCaNWssREdHc1atWmVhxYoVBpYtW2Zh
        yZIlnEWLFlmIiooywFbCANupMcAcbuD999/XmDdvnoW5c+caYHkw8O6772rMnj3bwttvv23grbfeMjBr
        1iyNmTNnWpgxY4bG9OnTLbzxxhsar7/+uoXXXntN49VXX7XwyiuvrH/55ZfXvPjii9OffPLJfwnprUKF
        ChUqVKhQoUKFChUqVKhQoUKFChUqVKhQoWLqxrRpfwehEheeST05FAAAAABJRU5ErkJggg==
</value>
  </data>
</root>